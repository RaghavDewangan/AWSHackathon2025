Resources:
  # ✅ Explicit API definition
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization'"
        AllowOrigin: "'*'"

  LeadsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: LeadsTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      KeySchema:
        - AttributeName: pk
          KeyType: HASH

  # --- Then attach your Lambda functions to this ApiGateway ---
  SearchShopify:
    Type: AWS::Serverless::Function
    Properties:
      Handler: search_shopify_retailers.lambda_handler
      CodeUri: lambda_functions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: LeadsTable
      Events:
        PostSearch:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway     # ✅ explicit reference
            Path: /search
            Method: post

  StoreLead:
    Type: AWS::Serverless::Function
    Properties:
      Handler: store_lead_data.lambda_handler
      CodeUri: lambda_functions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: LeadsTable
      Events:
        PostStore:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /leads
            Method: post

  UpdateLeadStatus:
    Type: AWS::Serverless::Function
    Properties:
      Handler: update_lead_status.lambda_handler
      CodeUri: lambda_functions
      Policies:
        - DynamoDBCrudPolicy:
            TableName: LeadsTable
      Events:
        PostUpdateStatus:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /leads/status
            Method: post

  SendEmail:
    Type: AWS::Serverless::Function
    Properties:
      Handler: send_cold_email.lambda_handler
      CodeUri: lambda_functions
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource: "*"
      Events:
        PostEmail:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /email/send
            Method: post

  DraftEmail:
    Type: AWS::Serverless::Function
    Properties:
      Handler: bedrock_email_draft.lambda_handler
      CodeUri: lambda_functions
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - bedrock:InvokeModel
              Resource: "*"
      Events:
        PostDraft:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /email/draft
            Method: post

Outputs:
  ApiUrl:
    Description: API Gateway base URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  LeadsTableName:
    Value: !Ref LeadsTable
